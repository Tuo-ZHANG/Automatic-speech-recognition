a_1_0_00_3_10 HI EVERYONE MY NAME IS PAVEL
a_1_100_57_108_91 ON THE WEB SERVER YOU SHOULD CHANGE YOUR DIRECTORY TO TEAMLAB PROJECT DIRECTORY
a_1_11_88_15_85 ON THE WEBSITE PLEASE CLICK DOCUMENTATION LINK
a_1_120_08_126_30 DON'T TYPE EXACTLY THE SAME WHAT I TYPED IT'S MY DIRECTORY YOU SHOULD USE YOUR OWN
a_1_130_61_132_11 ALRIGHT
a_1_132_12_134_00 NOW WE NEED TO DOWNLOAD KALDI
a_1_142_25_147_84 KALDI IS OPEN SOURCE AND IT IS HOSTED ON GITHUB
a_1_147_85_154_10 WE JUST NEED TO RUN GIT CLONE TO GET A COPY OF THE WHOLE KALDI SOURCE CODE
a_1_18_07_24_79 KALDI IS A TOOLKIT FOR SPEECH RECOGNITION RESEARCH AND IT IS INTENDED FOR SPEECH RECOGNITION RESEARCHERS AND PROFESSIONALS
a_1_224_41_227_54 OKAY GIT CLONE FINISHED
a_1_228_65_235_92 NOW WE HAVE KALDI DIRECTORY AND WE GO THERE
a_1_237_94_245_41 YOU CAN SEE THE FILES OF THE TOP LEVEL OF KALDI
a_1_246_63_250_17 NOW WE CAN GO TO THE INSTALLATION STEP
a_1_24_80_32_22 RECENTLY IT IS GETTING SLIGHTLY LESS RELEVANT FOR THE RESEARCH HOWEVER IT IS STILL VERY POPULAR IN THE INDUSTRY
a_1_251_67_255_43 THE TOP ARE LIKE EH
a_1_255_79_259_74 THE TOP LEVEL INSTRUCTIONS ARE LOCATED IN THE INSTALL FILE
a_1_259_82_261_02 LET'S CHECK IT
a_1_264_37_273_53 IT TELLS US TO GO TO TOOLS FOLLOW INSTALL INSTRUCTIONS THERE THEN GO TO SRC AND FOLLOW INSTALL INSTRUCTIONS THERE
a_1_274_88_279_23 LET'S GO TO TOOLS
a_1_279_96_290_47 IT IS A DIRECTORY CONTAINS SCRIPTS TO INSTALL ADDITIONAL THIRD PARTY TOOLS NEEDED FOR KALDI OR FOR KALDI RECIPIES
a_1_290_97_292_22 WE WILL TALK ABOUT THEM LATER
a_1_306_34_313_46 SO FIRST THING THAT WE NEED TO DO IS TO RUN THIS SCRIPT TO CHECK THE DEPENDENCIES
a_1_319_69_324_25 IT GIVES A COUPLE OF WARNINGS WE CAN IGNORE THEM
a_1_32_28_39_15 IF YOU WOULD JOIN A COMPANY AND WOULD WORK ON SPEECH RECOGNITION THERE MOST LIKELY YOU WOULD NEED TO USE KALDI
a_1_346_07_355_21 NOW WE CAN RUN MAKE IT WILL INSTALL NECESSARY TOOLS IT WILL INVOLVE COMPILATION
a_1_355_22_362_53 AT IMS WE HAVE EH COMPILER CACHE BY DEFAULT IT'S CALLED CCACHE
a_1_364_38_380_40 AND IT WOULD BE BETTER TO DISABLE IT BECAUSE IN KALDI WE WILL COMPILE A LOT OF FILES AND WE WILL QUICKLY RUN OUT OF DISK SPACE FOR CACHE
a_1_392_69_400_08 WE WILL DISABLE THE COMPILE CACHE BY EXPORTING VARIABLE
a_1_3_11_6_08 I WILL GET YOU FAMILIAR WITH KALDI TOOLKIT IN THIS MODULE
a_1_400_97_403_16 CCACHE DISABLE EQUALS ONE
a_1_403_81_408_78 NOW WE CAN RUN MAKE TO COMPILE THE TOOLS
a_1_409_66_419_30 AND WE WILL USE J OPTION WHICH TELLS MAKE TO RUN SEVERAL COMPILATION JOBS IN PARALLEL
a_1_40_83_46_72 IN THE NEXT VIDEOS I WILL WALK YOU THROUGH KALDI FOR DUMMIES TUTORIAL
a_1_420_28_426_62 IT IS NEEDED FOR FASTER INSTALLATION AND FASTER PROCESSING
a_1_426_89_440_27 SINCE WE HAVE SINCE WE HAVE FORTY CPU CORES ON THIS SERVER WE CAN RUN MAKE WITH FORTY JOBS
a_1_471_46_476_70 OKAY AS WE SEE EVERYTHING WENT WELL
a_1_477_89_480_55 TOOLS INSTALLATION COMPLETED
a_1_480_56_483_47 NOW LET'S GO TO SRC
a_1_483_48_485_74 SRC STANDS FOR SOURCE CODE
a_1_485_99_488_85 THIS IS THE ACTUAL CODE OF KALDI
a_1_491_86_495_38 LET'S SEE THE INSTALLATION INSTRUCTIONS
a_1_497_01_504_46 THE INSTALLATION INSTRUCTIONS ARE CONFIGURE SCRIPT
a_1_50_04_61_06 AFTER BRIEF INTRODUCTION THE TUTORIAL LISTS ENVIRONMENT REQUIREMENTS FOR INSTALLATION AND USAGE OF KALDI
a_1_515_64_525_58 OKAY LIBRARIES ARE NOT FOUND BUT AT IMS WE HAVE ALTERNATIVE LIBRARY CALLED ATLAS WE CAN USE IT
a_1_540_66_545_01 NOW WE SEE A PROBLEM WITH CUDA LIBRARIES
a_1_545_02_553_17 WE ACTUALLY SHOULD DISABLE CUDA BECAUSE IT'S ONLY NEEDED TO TRAIN NEURAL NETWORKS SO FAR IT'S NOT NEEDED
a_1_555_76_560_72 TO SEE HOW TO DO IT WE WILL CALL CONFIGURE SCRIPT WITH HELP OPTION
a_1_564_61_568_28 BUILD WITH CUDA DEFAULT YES
a_1_568_46_572_69 WE WILL CHANGE THIS OPTION TO NO
a_1_587_19_597_74 KALDI HAS BEEN SUCCESSFULLY CONFIGURED NOW WE CAN COMPILE KALDI USING THESE TWO MAKE COMMANDS
a_1_601_31_607_60 AND WE SPECIFY AGAIN FORTY PARALLEL JOBS FOR THE COMPILATION
a_1_62_14_72_77 WE WILL USE IMS SERVER TO INSTALL AND USE KALDI THEREFORE WE SHOULD NOT WORRY ABOUT THE REQUIREMENTS EVERYTHING SHOULD BE READY THERE
a_1_638_18_641_05 OKAY IT SAYS DONE
a_1_641_06_643_95 IT MEANS EVERYTHING WENT WELL AGAIN
a_1_643_96_648_87 WE HAVE SUCCESSFULLY DOWNLOADED AND COMPILED KALDI
a_1_648_88_651_77 NOW IT'S READY FOR USE
a_1_651_86_659_83 AND WE CAN GO TO THE NEXT PART OF KALDI TUTORIAL KALDI DIRECTORIES STRUCTURE
a_1_659_84_662_30 SEE YOU IN THE NEXT VIDEO
a_1_6_98_11_87 TO START PLEASE GO TO THE OFFICIAL WEBSITE OF KALDI KALDI DASH ASR DOT ORG
a_1_72_78_77_55 TO CONNECT TO THE SERVER WE WILL USE TERMINAL APPLICATION AND SSH COMMAND
a_1_80_11_86_02 PLEASE TYPE SSH YOUR IMS LOGIN
a_1_86_03_93_49 THEN THE NAME OF THE SERVER IT'S PHOENIX IMS UNI STUTTGART
b_2_0_03_4_44 IN THIS VIDEO WE WILL TALK BRIEFLY ABOUT KALDI DIRECTORIES
b_2_105_03_114_90 AND ANOTHER ONE IS MINI LIBRISPEECH WHICH SERVES AS EH MAIN EXAMPLE OF BUILDING RECIPIES IN KALDI
b_2_115_20_127_49 THANG WILL TALK ABOUT MINI LIBRISPEECH RECIPY IN THE NEXT MODULE WE CAN TAKE A LOOK IN WALL STREET JOURNAL RECIPY
b_2_129_48_136_95 SO AS YOU CAN SEE THERE IS S5 DIRECTORY IN EACH OF THE RECIPY
b_2_136_96_148_79 CURRENTLY IT DOESN'T MEAN ANYTHING MOST LIKELY IF YOU LOOK FOR ANY OTHER RECIPY IT WILL BE ALSO IN S5
b_2_151_10_159_65 SOME RECIPIES FOR EXAMPLE TEDLIUM HAVE SEVERAL DIRECTORIES
b_2_159_66_169_80 YOU CAN SEE THAT THEY CORRESPOND TO DIFFERENT REVISIONS OF THE RECIPY OR DIFFERENT VERSIONS OF THE RECIPY
b_2_171_54_176_67 I THINK THAT IS ENOUGH INFORMATION ABOUT EXAMPLES
b_2_178_55_185_67 WE CAN GO TO THE SOURCE CODE TAKE A LOOK INTO ITS CONTENTS
b_2_185_96_200_94 SO WE'VE SEEN ALREADY THE CONFIGURE SCRIPT WHICH CONFIGURES THE KALDI TO BE RUN ON CERTAIN SYSTEM OR OUR SYSTEM FOR EXAMPLE
b_2_200_95_218_31 IT ALSO HAS DOCUMENTATION DIRECTORY AHM AND MANY MORE DIRECTORIES WHICH CAN BE DIVIDED TO TWO GROUPS
b_2_218_32_234_63 ONE OF THEM ARE LIBRARY DIRECTORIES FOR EXAMPLE AHM HMM IS A LIBRARY WITH LIBRARIES FOR HIDDEN MARKOV MODEL AHM FUNCTIONS
b_2_21_49_25_06 SRC WITH ACTUAL KALDI SOURCE CODE
b_2_236_00_247_45 AND THE RESULT OF COMPILATION IS THIS LIB KALDI HMM DOT SO FILE WHICH IS BINARY LIBRARY FILE IN LINUX
b_2_247_46_264_98 SO STANDS FOR SHARED OBJECTS ITS IT JUST PACKS ALL THE FUNCTIONS AND OBJECTS FROM THESE C++ AND HEADERS FILES AS A BINARY FILE
b_2_25_07_35_00 AND TOOLS WITH ADDITIONAL TOOLS AND COMPONENTS NEEDED TO RUN THE RECIPIES
b_2_266_21_273_05 IN ORDER TO USE THESE BINARY LIBRARIES WE NEED PROGRAMS
b_2_273_06_285_50 THE PROGRAMS ARE ALSO CALLED BINARIES IN LINUX AND THEY ARE STORED IN BIN DIRECTORIES IN KALDI
b_2_285_51_300_59 FOR EXAMPLE WE CAN WE WILL USE AH GMM BIN PROGRAMS WHICH ARE PROGRAMS OR BINARIES WORKING WITH GAUSSIAN MIXTURE MODEL
b_2_306_90_317_17 SO HERE YOU CAN SEE CC FILES WHICH ARE C++ CODE OR C++ SOURCE CODE FILES
b_2_317_18_324_52 SOME THERE SHOULD BE SOME H FILES BUT I DON'T SEE THEM
b_2_325_28_334_10 OH OKAY I THINK H FILES ARE ONLY USED IN THE LIBRARIES FOR EXAMPLE IN GMM DIRECTORY
b_2_336_29_338_85 LIKE THIS ONE
b_2_339_20_353_95 AND THERE IS USUALLY A MAKEFILE WHICH DESCRIBES THE OBJECTS WHICH CAN BE PRODUCED BASED ON THE FILES IN THIS DIRECTORY AND HOW THEY SHOULD BE PRODUCED
b_2_358_53_365_51 THE DOT A FILES ARE SOMETHING TEMPORARY YOU DON'T NEED TO KNOW ABOUT THEM
b_2_365_52_370_79 DOT O IS ALSO SOMETHING TEMPORARY IT'S OUTPUT OBJECT FROM THE COMPILER
b_2_370_80_378_44 MOSTLY WHAT WE WILL BE WORKING WITH IS BINARY FILES
b_2_379_78_383_53 SOMETHING LIKE GMM DECODE SIMPLE
b_2_385_03_394_02 WE KNOW THAT IT WORKS WITH GAUSSIAN MIXTURE MODEL BECAUSE IT STARTS WITH GMM WE KNOW IT IS SUPPOSED TO DO
b_2_394_03_397_81 IT IS SUPPOSED TO DO THE DECODING PROCESS
b_2_397_82_423_89 AND THE REST IS JUST A ADDITIONAL INFORMATION ABOUT HOW EXACTLY OR IT IS DOING IT OR WHAT IS OTHER EHM RELEVANT INFORMATION YOU CAN NEED YOU MIGHT NEED WHEN RUNNING THIS BINARY OR SEARCHING FOR BINARY
b_2_40_13_47_96 THERE ARE FEW MORE OF THEM BUT MOST LIKELY YOU WILL NOT NEED THEM IN THIS COURSE
b_2_423_90_446_33 WHY IS IT ACTUALLY WHY IT IS ACTUALLY IMPORTANT TO KNOW WHERE IS WHAT IS BECAUSE WHEN YOU DEVELOP A NEW SCRIPT FOR KALDI MOST LIKELY YOU NEED TO USE EXISTING BINARIES TO INTERACT WITH KALDI FILES
b_2_446_34_458_29 AND IN ORDER TO CHECK IF WHAT ARE POSSIBILITIES YOU WOULD NEED TO GO TO THIS BIN DIRECTORIES AND SEE IF THERE IS ANYTHING WHAT YOU CAN USE
b_2_459_55_472_46 AND IF YOU THINK THAT SOME PROGRAM PROBABLY DOES WHAT YOU NEED YOU CAN RUN THIS PROGRAM WITHOUT ANY EHM ARGUMENTS AND SEE THE HELP
b_2_473_82_488_02 IT WILL TELL YOU WHAT IT ACTUALLY DOES DECODE FEATURES USING GMM BASED MODEL EHM AND IT WILL TELL YOU HOW TO RUN IT
b_2_488_35_499_75 SO YOU SEE THAT IN THIS CASE YOU CAN SPECIFY SEVERAL OPTIONS FROM HERE AND FROM HERE
b_2_48_81_57_00 EH LET'S CHECK WHAT WE CAN SEE IN THE EXAMPLES DIRECTORY
b_2_499_76_505_12 YOU WOULD NEED TO SPECIFY THE MODEL IN FST FORMAT
b_2_4_47_8_89 AS YOU CAN SEE THERE ARE SEVERAL DIRECTORIES AT THE TOP LEVEL OF KALDI
b_2_506_42_516_32 AND SEVERAL EHM ACTUALLY IT'S ONLY ONE R SPECIFIER
b_2_516_33_534_34 R SPECIFIER STANDS FOR READING SPECIFIER IT MEANS THAT IT IS A STRING WHICH WOULD DESCRIBE HOW TO READ INFORMATION HOW TO READ THE INPUT INFORMATION FOR THIS PROGRAM
b_2_534_35_546_40 W SPECIFIER IS WRITING SPECIFIER IT MEANS THAT IS SOME STRING WHICH DESCRIBES WHERE AND HOW TO WRITE THE OUTPUT OF THIS PROGRAM
b_2_546_41_555_60 IN THIS CASE IT COULD BE WORDS WRITING SPECIFIER WHICH DESCRIBES WHERE TO WRITE THE DECODED WORDS FROM THE FEATURES
b_2_555_61_567_88 AND ALSO ALIGNMENTS EH SPECIFIER WHERE ALIGNMENTS WOULD BE WRITTEN OR LATTICE SPECIFIER WHERE LATTICE WOULD BE WRITTEN
b_2_567_90_583_31 THE SQUARE BRACKETS DENOTE NON ESSENTIAL NON REQUIRED PARAMETERS SO IF YOU DON'T SPECIFY ALIGNMENTS OR LATTICE THEN THEY WILL NOT BE WRITTEN
b_2_583_32_592_59 IF YOU DON'T SPECIFY THE WORDS SPECIFIER THE PROGRAM WILL FAIL BECAUSE THIS PARAMETER IS REQUIRED
b_2_595_06_605_03 AND YOU CAN SEE SIMILAR STRUCTURE BIN PROGRAMS MANY OTHER BIN DIRECTORIES
b_2_59_50_64_29 THERE ARE A LOT OF OTHER DIRECTORIES
b_2_614_15_632_14 THIS BIN DIRECTORY DOES NOT CORRESPOND TO ANY PARTICULAR LIBRARY BUT IT CONTAINS MANY USEFUL PROGRAMS SUCH AS COMPUTE WORD ERROR RATE DEFINE THE DIMENSION OF MATRIX AND SO ON
b_2_637_81_642_27 OKAY I THINK THAT'S IT
b_2_643_37_649_65 THE NEXT VIDEO WE WILL START TO WORK ON OUR FIRST SPEECH RECOGNITION SYSTEM
b_2_649_80_652_86 SEE YOU IN THE NEXT VIDEO
b_2_65_58_69_11 THIS DIRECTORIES ARE CALLED RECIPIES
b_2_69_20_83_11 EACH OF THEM CONTAINS A DESCRIPTION OF THE PROCESS TO BUILD ASR SYSTEM USING ONE CORPUS OR SEVERAL CORPORA TOGETHER
b_2_83_12_105_02 EH MOST IMPORTANT OF THEM ARE WSJ WHICH DESCRIBES THE WALL STREET JOURNAL ASR SYSTEM OR ASR BASED ON THE WALL STREET JOURNAL CORPUS WHICH IS VERY POPULAR BENCHMARK DATASET FOR SPEECH RECOGNITION
b_2_8_90_21_48 MOST IMPORTANT OF THEM ARE PROBABLY EGS WITH EXAMPLE SCRIPTS FOR BUILDING OF ASR SYSTEMS USING VARIOUS CORPORA
