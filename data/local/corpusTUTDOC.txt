IN THIS VIDEO I WILL SHOW YOU HOW TO PREPARE DATA FOR KALDI
FIRST OF ALL FOR SPEECH RECOGNITION WE WOULD NEED AUDIO RECORDINGS WITH DURATION FROM TWO TO THIRTY SECONDS ROUGHLY AND TRANSCRIPTIONS FOR THEM
THIS TUTORIAL SUGGESTS TO USE RECORDINGS OF SPOKEN DIGITS AND THEY ALSO SUGGEST TO MAKE IT ON YOUR OWN
EH I WAS A BIT LAZY AND FOUND A FREE PRE-RECORDED SPOKEN DIGITS DATASET
YOU CAN USE CTRL R TO SEARCH FOR COMMANDS IN THE HISTORY FOR EXAMPLE I CAN FIND EH CD COMMAND TO CHANGE DIRECTORY TO THE TEAMLAB DIRECTORY OR TO CONNECT TO PHOENIX
HERE YOU CAN SEE THE INDIVIDUAL RECORDING FILES
FROM THE DOCUMENTATION I KNOW THAT EH THE NAMING WORKS AS FOLLOWS
THE FIRST PART IS THE DIGIT WHICH IS PRONOUNCED IN THIS AUDIO FILE
THE SECOND PART IS THE NAME OF SPEAKER AND THE THIRD PART IS THE ID OF THIS RECORDING
AND WE HAVE TWO THOUSAND RECORDINGS
FIVE HUNDRED RECORDINGS PER SPEAKER
YEAH AS YOU CAN SEE THERE ARE FOUR SPEAKERS THEO YWEWELER NICOLAS AND JACKSON
I WOULD SUGGEST YOU TO USE THE SAME DATASET SO THAT YOU CAN COMPARE RESULTS AND MAKE SURE THAT EVERYTHING IS CORRECT
WE WILL START MAKING OUR OWN RECIPY IN THE EGS DIRECTORY
LET'S CREATE S5 DIRECTORY JUST TO BE UNIFORM WITH OTHER RECIPIES
AS I MENTIONED BEFORE IT DOESN'T MEAN ANYTHING IT'S JUST A TRADITION
OKAY HERE THE TUTORIAL TELLS HOW TO STORE THE DATA WE ACTUALLY WILL NOT DO IT BECAUSE WE ALREADY HAVE DATA IN SEPARATE DIRECTORY WHEN WE DID GIT CLONE
NOW WE SEE THE DESCRIPTION OF ACTUAL FILES WHICH WE NEED TO CREATE
ALL DATASETS IN KALDI RECIPIES ARE USUALLY STORED UNDER DATA DIRECTORY
LET'S MAKE DATA
AND IN THIS RECIPY WE WILL HAVE TWO DATASETS ONE IS TEST AND ANOTHER ONE IS TRAIN
SO IN KALDI DATASETS ARE USUALLY DESCRIBED IN TEXT FILES
AND THE FIRST FIELD IS USUALLY SOME ID FOR SOME ITEM MOST IT'S UTTERANCE OR RECORDING ID AND OTHER FIELDS ARE SOME ATTRIBUTES FOR THAT ITEM
FOR EXAMPLE HERE WE THE DESCRIPTION OF SPEAKERS GENDERS FILE
IT LISTS EH ALL THE SPEAKERS AND THEIR GENDERS
WE WILL NOT CREATE THIS FILE BECAUSE IT'S NOT NEEDED FOR MOST OF THE SYSTEMS
OKAY THE NEXT FILE IS WAV DOT SCP AND IT'S ACTUALLY VERY IMPORTANT FILE BECAUSE IT LISTS AUDIO FILES
SO NORMALLY EHM NORMALLY IT CAN BE EITHER UTTERANCE OR RECORDING ID
IN THIS CASE WE SEE UTTERANCE ID BECAUSE IT'S ONLY ONE UTTERANCE PER RECORDING
ONE UTTERANCE IS THE SHORTEST UNIT OF DATA IN SPEECH RECOGNITION SYSTEMS
SO AS YOU CAN SEE WE JUST NEED TO CREATE A LIST OF FILES AND GIVE THEM NAMES
WE WILL GO ONE BY ONE OVER ALL FOUR SPEAKERS AND LIST FILES FOR EACH SPEAKER AND DIRECT THIS LIST TO WAV SCP
SO LET'S START FROM JACKSON
HERE ARE ALL THE FILES BY JACKSON
YOU CAN USE THIS PATTERN STAR JACKSON STAR TO LIST ALL FILES WITH THIS STRING IN THE NAME
NOW WE WILL USE A SHORT EH NO WE WILL NOT USE AWK WE WILL USE A FOR LOOP IN BASH
SO F IN THIS CASE IS VARIABLE WHICH CONTAINS ONE FILE NAME OR THE NAME OF ONE FILE
THIS BASH LOOP MEANS GO OVER ALL FILES AND PRINT THE NAME OF THE FILE FOR EACH OF THE FILE
I MADE A MISTAKE THERE IS ONE WORD MISSING YEAH NOW IT'S WORKING
OKAY BUT WE NEED NOT ONLY THE NAME OF THE FILE THE FULL PATH OF THE FILE WE ALSO NEED AN UTTERANCE ID FOR IT
FOR THIS WE WILL USE EH BASH SUBCOMMAND
SO BASENAME THIS FILE NAME DOT WAV
IT JUST PRINTS THE NAME OF THE FILE WITHOUT DIRECTORY AND WITHOUT DOT WAV IN THE END
WE CAN USE THIS AS A NAME OF UTTERANCE
BUT IN KALDI WE HAVE REQUIREMENT THAT EVERY UTTERANCE HAS TO START WITH SPEAKER NAME OTHERWISE THERE WILL BE A PROBLEM WITH SORTING IN DATASETS
SO I WILL ADD THE NAME OF SPEAKER TO THE UTTERANCE ID
OKAY AND FINALLY I NEED TO ADD FILE PATH AGAIN
SO AS YOU CAN SEE WE HAVE NOW UTTERANCE ID SPACE AND FILE PATH
LET'S SAVE THIS TO TRAIN WAV SCP
DONE NOW WE HAVE THIS WAV SCP FOR JACKSON
AND WE CAN CHECK THERE ARE ALL FIVE HUNDRED RECORDINGS FOR THIS SPEAKER
NOW WE HAVE TO REPEAT THE SAME FOR THE REST OF THE SPEAKERS
THE NEXT ONE IS NICOLAS
HERE I WILL CHANGE THE REDIRECTION COMMAND SO THAT IT DOES NOT CREATE THE FILE FROM SCRATCH BUT APPENDS THE OUT TO THE EXISTING FILE
NOW WE HAVE ONE THOUSAND ITEMS IN THIS FILE ONE THOUSAND LINES TO SAY MORE PRECISELY
AND WE HAVE NICOLAS IN THE END
NEXT ONE IS THEO
AND FINALLY THIS STRANGE NAME YWEWELER
WE WILL ACTUALLY USE IT FOR TESTING BECAUSE WE WOULD LIKE TO KNOW HOW WELL OUR SYSTEM WOULD WORK ON SPEAKERS WHICH IT DIDN'T SEE IN THE TRAINING DATA
HERE WE CAN STILL USE APPEND REDIRECTION BUT SINCE WE DON'T HAVE THIS FILE YET IT WILL BE CREATED FROM SCRATCH
WE COULD DO IT FOR TRAINING DATA AS WELL
I THINK WE HAVE FINISHED THE WAV SCP PART
THE NEXT ONE IS TEXT
FOR THIS FILE WE HAVE AGAIN THE UTTERANCE ID AND THE TRANSCRIPTION FOR THIS UTTERANCE
EHM WE WILL USE THE NAME OF THE UTTERANCE TO INFER THE TRANSCRIPTIONS SINCE WE KNOW THAT THE NAME ALREADY CONTAINS THE DIGIT WHICH IS PRONOUNCED IN EVERY FILE
FOR EXAMPLE ALL UTTERANCES WITH ZERO CONTAIN THE PRONUNCIATION OF THE DIGIT ZERO
TO GET LIST OF ALL SUCH UTTERANCES WE WILL USE GREP COMMAND
AND HERE I SPECIFY UNDERSCORE ZERO UNDERSCORE SO THAT WE DON'T GET FOR EXAMPLE THE UTTERANCES WHICH JUST END WITH ZERO WHICH WOULD BE INCORRECT BECAUSE WE DON'T ACTUALLY KNOW WHAT IS CONTAINED IN THIS UTTERANCE BASED ON JUST KNOWING THAT IT ENDS WITH ZERO WE NEED UTTERANCE CONTAINING ZERO IN THE MIDDLE
NOW I WILL ACTUALLY USE AWK TO PRINT THE FIRST FIELD AND THEN THE TRANSCRIPTION WHICH IS PREDEFINED IT'S JUST ZERO
AWK IS QUITE USEFUL FOR WORKING WITH EHM SPACE SEPARATED TEXT FILES BECAUSE IT BREAKS ALL FIELDS AUTOMATICALLY BY SPACE AND IT HAS SOME HANDY OPERATIONS TO WORK WITH EHM VALUES LISTED FROM THESE FILES
LET'S CHECK
YEAH THAT LOOKS CORRECT
NOW WE HAVE TO REPEAT THE SAME FOR ALL TEN DIGITS WHICH IS A BIT BORING
OKAY I THINK I'M DONE WITH TEXT FOR TRAIN DATASET LET'S SEE WHAT WE HAVE THERE
YEAH IT'S ONE THOUSAND FIVE HUNDRED UTTERANCES THAT'S GOOD
NOW I HAVE TO REPEAT THE SAME FOR TRAINING DATA TESTING SET
OKAY THAT'S THIS LOOKS CORRECT
WE HAVE ALL FIVE HUNDRED UTTERANCES FROM THEO
YEAH AS YOU CAN SEE FOR EXAMPLE IN THIS CASE WE HAVE THREE UNDERSCORE THREE AS A PART OF UTTERANCE NAME BUT IT DOES NOT MEAN THAT THE TRANSCRIPTION WOULD BE THREE BECAUSE THREE IS NOT THE DIGIT
IT'S JUST AN ID OF THE UTTERANCE THE DIGIT IS SIX AND IT IS SURROUNDED BY TWO UNDERSCORES THAT'S THE REASON WHY WE USED TWO UNDERSCORES IN GREP
THE NEXT FILE US UTTERANCE TO SPEAKER
IT SHOULD BE AGAIN THE SAME UTTERANCE ID AND SPEAKER ID SEPARATED BY SPACE
IT SHOULD BE ACTUALLY EASIER WE JUST NEED TO GREP FOUR TIMES PER DATASET PER IN TOTAL
THREE TIMES IN THE TRAINING AND ONE TIME IN TESTING
HM I THINK I MADE A MISTAKE IN THE TEST SET
IT SHOULD NOT BE THEO IT SHOULD BE YWEWELER
I'M SORRY
OKAY THAT LOOKS BETTER BUT NOW I WOULD NEED TO LET'S JUST CHECK WE ALSO HAVE THEO
NOW TEXT FILE CONTAINS WRONG UTTERANCES
SINCE I KNOW THAT THE ONLY DIFFERENCE IS THE SPEAKER NAME I CAN QUICKLY FIX IT WITH SED
THIS LOOKS BETTER
YES I CAN FIND THIS UTTERANCE SO WAV SCP AND TEXT LOOK CONSISTENT
OKAY WHERE DID WE STOP
IT WAS TRAIN AND IT WAS SPEAKER JACKSON
YEAH THAT LOOKS GOOD
NOW WE HAVE TO DO THE SAME FOR NICOLAS AND THEO
OKAY LOOKS GOOD
WE HAVE THEO WE HAVE NICOLAS WE HAVE JACKSON
NOW WE NEED YWELWER YWEWELER HM
AND WE NEED TO DO THE SAME TEST
COOL
OKAY THE NEXT IS CORPUS AND IT SHOULD BE IN DATA LOCAL AND THIS IS JUST A TEXT FILE FOR LANGUAGE MODEL TRAINING
LANGUAGE MODEL TRAINING IS QUITE DIFFERENT FROM EVERYTHING ELSE IN ASR AND BECAUSE OF THIS THE FORMAT OF DATA IS ALSO DIFFERENT
ACTUALLY IT'S MUCH SIMPLER IN ONLY HAS DATA WITHOUT ANY LABELS OR ATTRIBUTES IT'S JUST TEXT
AND FOR THIS WE NEED TO CREATE DATA LOCAL AND WE WILL USE CUT COMMAND TO GET THE TEXT FROM THE TO GET THE TRANSCRIPTIONS FROM THE TEXT FILE
THIS OPTION F TELLS CUT THAT IT SHOULD USE SPACE TO SPLIT FIELDS IN THE FILE
AND WE ONLY SORRY THAT SHOULD BE D
D STANDS FOR DELIMITER
F STANDS FOR FIELD AND WE WANT TO ONLY SELECT FIELD NUMBER TWO AND EVERYTHING ELSE
AND ALSO ACTUALLY WE ONLY HAVE ONE FIELD IN THIS CASE BECAUSE WE ONLY HAVE ONE WORD
BUT USUALLY WE HAVE MORE THAN ONE WORD IN THE TRANSCRIPTION AND WE NEED TO SELECT MORE THAN ONE FIELD
IN THIS CASE IT'S ENOUGH TO SELECT JUST ONLY FIELD NUMBER TWO
IF WE WOULD SELECT FIELD NUMBER ONE FOR EXAMPLE WE WILL SEE UTTERANCE ID
OKAY LET'S SAVE THE RESULT TO DATA LOCAL CORPUS TXT AS THE TUTORIAL SUGGESTS
BY THE WAY I USE LESS TO EVALUATE OR TO LOOK INTO TEXT FILES IT'S QUITE EHM CONVENIENT
IT CAN SHOW YOU ANY TEXT FILES OF ANY SIZE
AND TO JUMP TO THE END OF THE FILE I USUALLY USE SHIFT F OR CAPITAL F
AND IN THIS CASE IT SWITCHES TO AUTOMATIC UPDATES SO THAT IF THE FILE WAS CHANGED THE LESS PROGRAM WILL AUTOMATICALLY UPDATE WHAT IT DISPLAYS AND SCROLL TO THE NEW END OF THE FILE
TO EXIT OF THIS MODE OF WAITING FOR DATA I USE CTRL C
AND THEN I'M IN NORMAL MODE AGAIN AND THEN I CAN GO TO THE BEGINNING OF FILE AGAIN WITH G G I THINK
ACTUALLY G IS ENOUGH
OH AND SHIFT G CAN ALSO BRING YOU TO THE END OF THE FILE
OKAY AND THE NEXT PART IS LANGUAGE DATA AND IT MAINLY DEALS WITH VARIOUS LINGUISTIC RESOURCES SUCH AS LEXICON
SO IN DATA LOCAL WE NEED TO CREATE DICT DIRECTORY
AND THERE WE SHOULD CREATE LEXICON TXT
I USE VIM EDITOR YOU CAN USE FOR EXAMPLE NANO IF YOU ARE NOT FAMILIAR WITH VIM BECAUSE VIM HAS QUITE SPECIAL WAY TO OPERATE AND IT MIGHT BE INCONVENIENT FOR YOU IF YOU ARE NOT USED TO IT
BASICALLY WE NEED TO COPY PASTE THIS CONTENTS AND WE WILL HAVE THE PRONUNCIATION DICTIONARY FOR OUR SYSTEM
SO HERE WE HAVE ALL OUR WORDS WHICH ARE JUST DIGITS AND PHONETIC TRANSCRIPTION FOR THEM WITH SOME PSEUDO PHONETIC ALPHABET SO TO SAY
AND TWO ADDITIONAL WORDS ONE IS UNKNOWN WORD WHICH IS USUALLY USED FOR TRANSCRIBING OR FOR LABELING THE AUDIO RECORDINGS WITH SOME WORDS WHICH ARE NOT CONTAINED IN THE DICTIONARY
AND ANOTHER ONE IS SILENCE WHICH IS USED TO LABEL PARTS OF THE RECORDINGS WITHOUT ANY SPEECH SO THAT THE MACHINE LEARNING ALGORITHM CAN STILL GET UNAMBIGUOUS LABELS FOR ANY KIND AUDIO INPUT AND LEARN MEANINGFUL EHM MAPPING
TO CREATE A SPECIAL FILE WHICH LISTS ALL THE PHONES WHICH ARE NOT SILENCE
IT'S QUITE IMPORTANT TO SEPARATE PHONES OR LABELS RELATED TO SPEECH FROM ALL OTHER LABELS BECAUSE SPEECH IS QUITE DIFFERENT IN THE RECORDING FROM EVERYTHING ELSE
ALRIGHT I THINK WE HAVE FINISHED THE DATA PREPARATION PART
I HAVE DONE EVERYTHING BY HAND WITH JUST BASH COMMANDS AND WOULD SUGGEST YOU TO DO THIS THIS WAY AS WELL
JUST TO SEE WHAT KIND OF INPUT AND OUTPUT YOU NEED TO PROVIDE TO THE SYSTEM
NORMALLY ALL THESE OPERATIONS ARE AUTOMATED USING SCRIPTS IN VARIOUS LANGUAGES MAINLY BASH AND PYTHON
AND I WOULD ENCOURAGE YOU AFTER FINISHING THIS TUTORIAL TRY TO WRITE YOUR SCRIPTS AS WELL
IF YOU WRITE ANY SCRIPTS WHICH CREATE THESE FILES AUTOMATICALLY PLEASE SEND THEM TO ME SO THAT I CAN CHECK IF YOUR UNDERSTOOD EVERYTHING CORRECTLY
OR ALTERNATIVELY YOU CAN JUST EVALUATE OUTPUT OF YOUR SCRIPTS AND COMPARE IT WITH FILES WHICH WE CREATED HERE BY HAND
SEE YOU IN THE NEXT VIDEO
IN THIS VIDEO I WILL SHOW HOW TO FINALIZE THE DATA STRUCTURE HOW TO FINALIZE THE DIRECTORY STRUCTURE FOR THE RECIPY
FIRST OF ALL WE NEED TO ATTACH ALL SHARED TOOLS FROM KALDI TO OUR RECIPY
EH THE TUTORIAL TELLS US TO COPY THE TOOLS FROM WALL STREET JOURNAL BUT WE WILL JUST CREATE EH SYMBOLIC LINKS
THE SCRIPTS FROM KALDI ARE STORED IN TWO DIRECTORIES UTILS AND STEPS
LET'S CONNECT TO PHOENIX SERVER
CHANGE THE DIRECTORY
AND GO OUR RECIPY
AND LET'S TAKE A LOOK FOR EXAMPLE TO LET'S TAKE A LOOK AT ANOTHER RECIPY
IT IS CALLED MINI LIBRISPEECH AND IT IS ACTUALLY THE GO TO RECIPY FOR ALL BEGINNERS
IT IS A MODEL RECIPY THIS IS RECIPY WHICH SERVERS AS A MODEL FOR ALL NEW RECIPIES
HERE WE CAN SEE THIS SYMLINK UTILS WHICH POINTS TO WALL STREET JOURNAL UTILS AND STEPS WHICH POINTS TO WALL STREET JOURNAL STEPS
FOR HISTORICAL REASONS ALL COMMON OR SHARED KALDI SCRIPTS ARE KEPT IN WALL STREET JOURNAL RECIPY AND ALL OTHER RECIPIES JUST LINK TO THIS DIRECTORIES
WE WILL DO THE SAME IN OUR RECIPY
NOW WE CAN ACCESS UTILS FROM OUR RECIPY
AND THE FIRST THING WHICH THAT WE WILL DO WILL BE VALIDATION OF OUR DATA FROM PREVIOUS STEP
IT IS QUITE IMPORTANT TO RUN THIS SCRIPT AND ANOTHER ONE FIX DATA DIRECTORY
ON THE DATA AFTER YOU THINK THAT YOU FINISHED THE PREPARATION AND DATA IS READY TO BE USED
QUITE OFTEN IT HAPPENS THAT MANY MISTAKES IN DATA PREPARATION ARE NOT VISIBLE UNTIL SOME KALDI SCRIPT EXECUTES VALIDATION OR FIXES IT
AND WHEN IT HAPPENS ACCIDENTALLY OR SUDDENLY USUALLY YOU ARE NOT AROUND TO SEE THIS
AND IT TAKES TIME TO FIND OUT WHAT ACTUALLY HAPPENED SO IT'S GOOD IDEA TO RUN THESE SCRIPTS RIGHT AWAY TO SEE IF EVERYTHING IS GOOD WITH THE DATA
AHA OKAY SO THE FIRST COMPLAINT IS THAT WE DON'T NEED DON'T HAVE SPEAKER TO UTTERANCE MAPPING
WE CAN ACTUALLY APPLY FIX DATA DIR AND WHEN IT SEES THAT THIS FILE IS MISSING IT GENERATES IT BECAUSE IT'S POSSIBLE TO GENERATE IT FROM UTTERANCE TO SPEAKER MAPPING
IT IS JUST INVERSE OF SPEAKER TO UTTERANCE
WE CAN SEE THAT IT ALSO SORTS IT IN PROPER WAY CHECKS THAT ALL FILES THAT LIST ATTRIBUTES OF UTTERANCES ACTUALLY LIST SOME COMMON UTTERANCES
AND REMOVES UTTERANCES WHICH ARE NOT MENTIONED IN SOME OF THE FILES IN THIS CASE THERE WERE NO SUCH UTTERANCES AND ALL ONE THOUSAND FIVE HUNDRED UTTERANCES WERE SAVES OR OR KEPT
NOW WE CAN VALIDATE AGAIN
NOW WE SEE THAT IT CAN NOT FIND FEATURES FILE
AND IT'S ACTUALLY NORMAL FOR THE MOMENT BECAUSE WE HAVE NOT YET RUN THE FEATURE EXTRACTION WE CAN SPECIFY THIS OPTION
NOW IT TELLS US THAT DATA DIRECTORIES SUCCESSFULLY VALIDATED AND IT MEANS THAT MOST LIKELY WE WILL BE ABLE TO USE THESE DATA DIRECTORY IN OUR RECIPY AND ALL THE FOLLOWING SCRIPTS AND THAT THERE WILL BE NO PROBLEM
WE CAN DO THE SAME FOR THE TEST
FIVE HUNDRED UTTERANCES ARE KEPT
AND IT'S VALIDATED SUCCESSFULLY BUT WITH ONE WARNING THAT WE ONLY HAVE ONE SPEAKER
BUT WE KNOW THAT'S ALRIGHT BECAUSE IT WAS OUR INTENTION TO USE VERY SMALL DATASET AND TO USE THREE SPEAKERS FOR TRAINING AND ONE SEPARATE SPEAKER FOR TESTING
OKAY ANOTHER THING IS THAT THIS TUTORIAL MENTIONS VOXFORGE MANY TIMES AS A MODEL RECIPY BUT IT'S ALREADY OUT OF DATE AND CURRENT RECOMMENDED RECIPY IS MINI LIBRISPEECH AS I MENTIONED
NEXT THING THAT WE NEED TO COPY IS A SCORING SCRIPT AND WE WILL COPY IT FROM MINI LIBRISPEECH AGAIN
WE ALSO NEED TO CREATE A LOCAL DIRECTORY
LOCAL DIRECTORY USUALLY CONTAINS SCRIPTS WHICH ARE SPECIFIC FOR THIS RECIPY AND NOT SHARED BETWEEN MANY RECIPIES AS OPPOSITE TO SCRIPTS IN UTILS AND STEPS DIRECTORIES
NEXT STEP IS LANGUAGE MODEL TOOLKIT INSTALLATION
WE NEED TO GO TO KALDI TOOLS AND CHECK THIS SCRIPT
LET'S READ THE COMMENTS INSIDE
SO WE NEED TO BE IN TOOLS DIRECTORY
THIS IS TRUE WE ARE THERE
AND WE ALSO NEED TO HAVE THE SOURCE CODE FOR THIS TOOLKIT
IT CAN NOT BE INSTALLED AUTOMATICALLY AND NORMALLY YOU WOULD NEED TO GO TO THIS WEBSITE FILL OUT SOME FORM AND DOWNLOAD IT AND SAVE IT HERE
BUT AT IMS WE ALREADY DOWNLOADED THIS ARCHIVE AND WE CAN COPY IT
LET'S TRY TO RUN IT
ALRIGHT IT LOOKS LIKE IT FINISHED SUCCESSFULLY
LET'S PROCEED FURTHER
NOW WE NEED TO CREATE TWO CONFIGURATION FILES
THE FIRST ONE IS DECODE CONFIG IT'S USED FOR THE SCRIPT WHICH RUNS DECODING OBVIOUSLY
BUT FIRST WE NEED TO GO BACK TO THE RECIPY
AND CREATE CONF DIRECTORY
WE WILL ACTUALLY JUST COPY THE CONFIGS FROM THE MINI LIBRISPEECH RECIPE AGAIN
AS YOU CAN SEE THERE IS NOTHING TO READ IN IT
AND I THINK IT'S OKAY
AND ANOTHER ONE IS MFCC EXTRACTION CONFIG
THIS ONE ACTUALLY CONTAINS ONE OPTION
SEE YOU IN THE NEXT VIDEO
DOC ID FILETWO ONE TWO FIVE NINE SEVEN TWO TWO  FILENAME KALDI FOR DUMMIES
HTML PARENT FOLDER WEBONE KALDI URL HTTPS KALDI
ASR
ORG DOC KALDI FOR DUMMIES
HTML
INTRODUCTION 
THIS IS A STEP BY STEP TUTORIAL FOR ABSOLUTE BEGINNERS ON HOW TO CREATE A SIMPLE ASR AUTOMATIC SPEECH RECOGNITION SYSTEM IN KALDI TOOLKIT USING YOUR OWN SET OF DATA
I REALLY WOULD HAVE LIKED TO READ SOMETHING LIKE THIS WHEN I WAS STARTING TO DEAL WITH KALDI
THIS IS ALL BASED ON MY EXPERIENCE AS AN AMATEUR IN CASE OF SPEECH RECOGNITION SUBJECT AND SCRIPT PROGRAMMING AS WELL
IF YOU HAVE EVER DELVED THROUGH KALDI TUTORIAL ON THE OFFICIAL PROJECT SITE AND FELT A LITTLE BIT LOST
WELL
MY PIECE OF ART MIGHT BE THE CHOICE FOR YOU
YOU WILL LEARN HOW TO INSTALL KALDI
HOW TO MAKE IT WORK AND HOW TO RUN AN ASR SYSTEM USING YOUR OWN AUDIO DATA
AS AN EFFECT YOU WILL GET YOUR FIRST SPEECH DECODING RESULTS
IT WAS CREATED BY WIT ZIELINSKI
FIRST OF ALL 
GET TO KNOW WHAT KALDI ACTUALLY IS AND WHY YOU SHOULD USE IT INSTEAD OF SOMETHING ELSE
IN MY OPINION KALDI REQUIRES SOLID KNOWLEDGE ABOUT SPEECH RECOGNITION AND ASR SYSTEMS IN GENERAL
IT IS ALSO GOOD TO KNOW THE BASICS OF SCRIPT PROGRAMMING LANGUAGES BASH
PYTHON
CPLUS PLUS MIGH BE USEFUL IN THE FUTURE PROBABLY YOU WILL WANT TO MAKE SOME MODIFICATIONS IN THE SOURCE CODE
ENVIRONMENT 
RULE NUMBER ONE 
USE LINUX
ALTHOUGH IT IS POSSIBLE TO USE KALDI ON WINDOWS
MOST PEOPLE I FIND TRUSTWORTHY CONVINCED ME THAT LINUX WILL DO THE JOB WITH THE LESS AMOUNT OF PROBLEMS
I HAVE CHOSEN UBUNTU ONE FOUR 
ONE ZERO 
THIS WAS IN TWO ZERO ONE FOUR ONE FIVE A RICH AND STABLE LINUX REPRESENTATION WHICH I HONESTLY RECOMMEND
WHEN YOU FINALLY HAVE YOUR LINUX RUNNING PROPERLY
PLEASE OPEN A TERMINAL AND INSTALL SOME NECESSARY STUFF IF YOU DO NOT ALREADY HAVE IT 
HAS TO BE INSTALLED 
AUTOMATION AND OPTIMIZATION OF CALCULATIONS IN THE FIELD OF LINEAR ALGEBRA
AUTOMATIC SOFTWARE COMPILATION ON DIFFERENT OPERATING SYSTEMS
CREATING PORTABLE MAKEFILE FILES
DISTRIBUTED REVISION CONTROL SYSTEM
CREATING STATIC AND DYNAMIC LIBRARIES
REVISION CONTROL SYSTEM SUBVERSION
NECESSARY FOR KALDI DOWNLOAD AND INSTALLATION
DATA TRANSFER USING HTTP
DATA COMPRESSION
PROBABLY HAS TO BE INSTALLED 
PROGRAMMING LANGUAGE
USED FOR SEARCHING AND PROCESSING PATTERNS IN FILES AND DATA STREAMS
UNIX SHELL AND SCRIPT PROGRAMMING LANGUAGE
COMMAND
LINE UTILITY FOR SEARCHING PLAIN
TEXT DATASETS FOR LINES MATCHING A REGULAR EXPRESSION
AUTOMATICALLY BUILDS EXECUTABLE PROGRAMS AND LIBRARIES FROM SOURCE CODE
DYNAMIC PROGRAMMING LANGUAGE
PERFECT FOR TEXT FILES PROCESSING
DONE
OPERATING SYSTEM AND ALL THE NECESSARY LINUX TOOLS ARE READY TO GO
DOWNLOAD KALDI 
I INSTALLED KALDI IN THIS DIRECTORY CALLED KALDI ROOT PATH 
KALDI DIRECTORIES STRUCTURE 
TRY TO ACKNOWLEDGE WHERE PARTICULAR KALDI COMPONENTS ARE PLACED
ALSO IT WOULD BE NICE IF YOU READ ANY FILES YOU FIND
MAIN KALDI DIRECTORY WHICH CONTAINS 
EXAMPLE SCRIPTS ALLOWING YOU TO QUICKLY BUILD ASR SYSTEMS FOR OVER THREE ZERO POPULAR SPEECH CORPORA DOCUMENTATION IS ATTACHED FOR EACH PROJECT
ADDITIONAL TOOLS AND SUPPLIES
NOT NEEDED FOR PROPER KALDI FUNCTIONALITY
KALDI SOURCE CODE
USEFUL COMPONENTS AND EXTERNAL TOOLS
TOOLS FOR RUNNING KALDI USING WINDOWS
THE MOST IMPORTANT DIRECTORY FOR YOU IS OBVIOUSLY 
HERE YOU WILL CREATE YOUR OWN ASR SYSTEM
YOUR EXEMPLARY PROJECT 
FOR THE PURPOSE OF THIS TUTORIAL
IMAGINE THAT YOU HAVE THE SAME SIMPLE SET OF DATA AS ME DESCRIBED BELOW
IN AUDIO DATA SECTION
THEN TRY TO TRANSPOSE EVERY ACTION I DO STRAIGHT INTO YOUR OWN PROJECT
IF YOU COMPLETELY DO NOT HAVE ANY AUDIO DATA OR YOU WANT TO FOLLOW MY TUTORIAL IN AN IDENTICAL WAY
FEEL FREE TO RECORD YOUR OWN TRACKS 
IT WILL BE EVEN BIGGER EXPERIENCE TO PLAY WITH ASR
HERE WE GO
YOUR PRECONDITION 
YOU HAVE SOME AMOUNT OF AUDIO DATA THAT CONTAIN ONLY SPOKEN DIGITS BY AT LEAST SEVERAL DIFFERENT SPEAKERS
EACH AUDIO FILE IS AN ENTIRE SPOKEN SENTENCE 
ONE
NINE
FIVE
YOUR PURPOSE 
YOU WANT TO DIVIDE YOUR DATA INTO TRAIN AND TEST SETS
SET UP AN ASR SYSTEM
TRAIN IT
TEST IT AND GET SOME DECODING RESULTS
YOUR FIRST TASK 
SOMETHING TO BEGIN WITH 
CREATE A FOLDER IN DIRECTORY
THIS IS A PLACE WHERE YOU WILL PUT ALL THE STUFF RELATED TO YOUR PROJECT
DATA PREPARATION 
AUDIO DATA 
I ASSUME THAT YOU WANT TO SET UP AN ASR SYSTEM
BASING ON YOUR OWN AUDIO DATA
FOR EXAMPLE 
LET IT BE A SET OF ONE ZERO ZERO FILES
FILE FORMAT IS WAV
EACH FILE CONTAINS THREE SPOKEN DIGITS RECORDED IN ENGLISH LANGUAGE
ONE BY ONE
EACH OF THESE AUDIO FILES IS NAMED IN A RECOGNIZABLE WAY 
WHICH IN MY PATTERN MEANS THAT THE SPOKEN SENTENCE IS ONE
FIVE
SIX AND PLACED IN THE RECOGNIZABLE FOLDER REPRESENTING PARTICULAR SPEAKER DURING A PARTICULAR RECORDING SESSION THERE MAY BE A SITUATION THAT YOU HAVE RECORDINGS OF THE SAME PERSON BUT IN TWO DIFFERENT QUALITY NOISE ENVIRONMENTS 
PUT THESE IN SEPARATE FOLDERS
SO TO SUM UP
MY EXEMPLARY DATASET LOOKS LIKE THIS 
ONE ZERO DIFFERENT SPEAKERS ASR SYSTEMS MUST BE TRAINED AND TESTED ON DIFFERENT SPEAKERS
THE MORE SPEAKERS YOU HAVE THE BETTER
EACH SPEAKER SAYS ONE ZERO SENTENCES
ONE ZERO ZERO SENTENCES UTTERANCES IN ONE ZERO ZERO 
WAV FILES PLACED IN ONE ZERO FOLDERS RELATED TO PARTICULAR SPEAKERS 
ONE ZERO 
WAV FILES IN EACH FOLDER
THREE ZERO ZERO WORDS DIGITS FROM ZERO TO NINE
EACH SENTENCE UTTERANCE CONSIST OF THREE WORDS
WHATEVER YOUR FIRST DATASET IS
ADJUST MY EXAMPLE TO YOUR PARTICULAR CASE
BE CAREFUL WITH BIG DATASETS AND COMPLEX GRAMMARS 
START WITH SOMETHING SIMPLE
SENTENCES THAT CONTAIN ONLY DIGITS ARE PERFECT IN THIS CASE
GO TO DIRECTORY AND CREATE FOLDER
IN CREATE TWO FOLDERS AND 
SELECT ONE SPEAKER OF YOUR CHOICE TO REPRESENT TESTING DATASET
USE THIS SPEAKERS SPEAKERID AS A NAME FOR AN ANOTHER NEW FOLDER IN DIRECTORY
THEN PUT THERE ALL THE AUDIO FILES RELATED TO THAT PERSON
PUT THE REST NINE SPEAKERS INTO FOLDER 
THIS WILL BE YOUR TRAINING DATASET
ALSO CREATE SUBFOLDERS FOR EACH SPEAKER
ACOUSTIC DATA 
NOW YOU HAVE TO CREATE SOME TEXT FILES THAT WILL ALLOW KALDI TO COMMUNICATE WITH YOUR AUDIO DATA
CONSIDER THESE FILES AS MUST BE DONE
EACH FILE THAT YOU WILL CREATE IN THIS SECTION AND IN LANGUAGE DATA SECTION AS WELL CAN BE CONSIDERED AS A TEXT FILE WITH SOME NUMBER OF STRINGS EACH STRING IN A NEW LINE
THESE STRINGS NEED TO BE SORTED
IF YOU WILL ENCOUNTER ANY SORTING ISSUES YOU CAN USE KALDI SCRIPTS FOR CHECKING AND FIXING DATA ORDER
AND FOR YOUR INFORMATION 
DIRECTORY WILL BE ATTACHED TO YOUR PROJECT IN TOOLS ATTACHMENT SECTION
IN DIRECTORY
CREATE A FOLDER 
THEN CREATE AND SUBFOLDERS INSIDE
CREATE IN EACH SUBFOLDER FOLLOWING FILES SO YOU HAVE FILES NAMED IN THE SAME WAY IN AND SUBFOLDERS BUT THEY RELATE TO TWO DIFFERENT DATASETS THAT YOU CREATED BEFORE 
THIS FILE INFORMS ABOUT SPEAKERS GENDER
AS WE ASSUMED
SPEAKERID IS A UNIQUE NAME OF EACH SPEAKER IN THIS CASE IT IS ALSO A RECORDINGID 
EVERY SPEAKER HAS ONLY ONE AUDIO DATA FOLDER FROM ONE RECORDING SESSION
IN MY EXAMPLE THERE ARE FIVE FEMALE AND FIVE MALE SPEAKERS 
F FEMALE
M MALE
PATTERN SPEAKERID GENDER 
THIS FILE CONNECTS EVERY UTTERANCE SENTENCE SAID BY ONE PERSON DURING PARTICULAR RECORDING SESSION WITH AN AUDIO FILE RELATED TO THIS UTTERANCE
IF YOU STICK TO MY NAMING APPROACH
UTTERANCEID IS NOTHING MORE THAN SPEAKERID SPEAKERS FOLDER NAME GLUED WITH *
WAV FILE NAME WITHOUT 
WAV ENDING LOOK FOR EXAMPLES BELOW
PATTERN UTERRANCEID FULL PATH TO AUDIO FILE 
THIS FILE CONTAINS EVERY UTTERANCE MATCHED WITH ITS TEXT TRANSCRIPTION
PATTERN UTERRANCEID TEXT TRANSCRIPTION 
THIS FILE TELLS THE ASR SYSTEM WHICH UTTERANCE BELONGS TO PARTICULAR SPEAKER
PATTERN UTERRANCEID SPEAKERID 
THIS FILE HAS A SLIGHTLY DIFFERENT DIRECTORY
IN CREATE ANOTHER FOLDER 
IN CREATE A FILE WHICH SHOULD CONTAIN EVERY SINGLE UTTERANCE TRANSCRIPTION THAT CAN OCCUR IN YOUR ASR SYSTEM IN OUR CASE IT WILL BE ONE ZERO ZERO LINES FROM ONE ZERO ZERO AUDIO FILES
PATTERN TEXT TRANSCRIPTION 
LANGUAGE DATA 
THIS SECTION RELATES TO LANGUAGE MODELING FILES THAT ALSO NEED TO BE CONSIDERED AS MUST BE DONE
LOOK FOR THE SYNTAX DETAILS HERE DATA PREPARATION EACH FILE IS PRECISELY DESCRIBED
ALSO FEEL FREE TO READ SOME EXAMPLES IN OTHER SCRIPTS
NOW IS THE PERFECT TIME 
IN DIRECTORY
CREATE A FOLDER 
IN CREATE FOLLOWING FILES 
THIS FILE CONTAINS EVERY WORD FROM YOUR DICTIONARY WITH ITS PHONE TRANSCRIPTIONS TAKEN FROM 
PATTERN WORD PHONE ONE PHONE TWO 
THIS FILE LISTS NONSILENCE PHONES THAT ARE PRESENT IN YOUR PROJECT
THIS FILE LISTS SILENCE PHONES
PATTERN PHONE 
THIS FILE LISTS OPTIONAL SILENCE PHONES
PROJECT FINALIZATION 
LAST CHAPTER BEFORE RUNNIG SCRIPTS CREATION
YOUR PROJECT STRUCTURE WILL BECOME COMPLETE
TOOLS ATTACHMENT 
YOU NEED TO ADD NECESSARY KALDI TOOLS THAT ARE WIDELY USED IN EXEMPLARY SCRIPTS
FROM COPY TWO FOLDERS WITH THE WHOLE CONTENT 
AND PUT THEM IN YOUR DIRECTORY
YOU CAN ALSO CREATE LINKS TO THESE DIRECTORIES
YOU MAY FIND SUCH LINKS IN
FOR EXAMPLE
SCORING SCRIPT 
THIS SCRIPT WILL HELP YOU TO GET DECODING RESULTS
FROM COPY THE SCRIPT INTO SIMILAR LOCATION IN YOUR PROJECT 
SRILM INSTALLATION 
YOU ALSO NEED TO INSTALL LANGUAGE MODELLING TOOLKIT THAT IS USED IN MY EXAMPLE 
SRI LANGUAGE MODELING TOOLKIT SRILM
FOR DETAILED INSTALLATION INSTRUCTIONS GO TO READ ALL COMMENTS INSIDE
CONFIGURATION FILES 
IT IS NOT NECESSARY TO CREATE CONFIGURATION FILES BUT IT CAN BE A GOOD HABIT FOR FUTURE
IN CREATE A FOLDER 
INSIDE CREATE TWO FILES FOR SOME CONFIGURATION MODIFICATIONS IN DECODING AND MFCC FEATURE EXTRACTION PROCESSES 
TAKEN FROM 
RUNNING SCRIPTS CREATION 
YOUR FIRST ASR SYSTEM WRITTEN IN KALDI ENVIRONMENT IS ALMOST READY
YOUR LAST JOB IS TO PREPARE RUNNING SCRIPTS TO CREATE ASR SYSTEM OF YOUR CHOICE
I PUT SOME COMMENTS IN PREPARED SCRIPTS FOR EASE OF UNDERSTANDING
THESE SCRIPTS ARE BASED ON SOLUTION USED IN DIRECTORY
I DECIDED TO USE TWO DIFFERENT TRAINING METHODS 
MONO 
MONOPHONE TRAINING
TRIPHONE 
SIMPLE TRIPHONE TRAINING FIRST TRIPHONE PASS
THESE TWO METHODS ARE ENOUGH TO SHOW NOTICABLE DIFFERENCES IN DECODING RESULTS USING ONLY DIGITS LEXICON AND SMALL TRAINING DATASET
TASK 
IN DIRECTORY CREATE THREE SCRIPTS 
SETTING LOCAL SYSTEM JOBS LOCAL CPU 
NO EXTERNAL CLUSTERS 
NJ ONE  NUMBER OF PARALLEL JOBS 
ONE IS PERFECT FOR SUCH A SMALL DATASET 
LM ORDER ONE  LANGUAGE MODEL ORDER N
GRAM QUANTITY 
ONE IS ENOUGH FOR DIGITS GRAMMAR 
SAFETY MECHANISM POSSIBLE RUNNING THIS SCRIPT WITH MODIFIED ARGUMENTS 
UNCOMMENT AND MODIFY ARGUMENTS IN SCRIPTS BELOW IF YOU HAVE ANY PROBLEMS WITH DATA SORTING 
UTILS VALIDATE DATA DIR
SH DATA TRAIN SCRIPT FOR CHECKING PREPARED DATA 
HERE FOR DATA TRAIN DIRECTORY 
UTILS FIX DATA DIR
SH DATA TRAIN TOOL FOR DATA PROPER SORTING IF NEEDED 
HERE FOR DATA TRAIN DIRECTORY 
GETTING RESULTS 
NOW ALL YOU HAVE TO DO IS TO RUN SCRIPT
IF I HAVE MADE ANY MISTAKES IN THIS TUTORIAL
LOGS FROM THE TERMINAL SHOULD GUIDE YOU HOW TO DEAL WITH IT
BESIDES THE FACT THAT YOU WILL NOTICE SOME DECODING RESULTS IN THE TERMINAL WINDOW
GO TO NEWLY MADE 
YOU MAY NOTICE THERE FOLDERS WITH AND RESULTS AS WELL 
DIRECTORIES STRUCTURE ARE THE SAME
GO TO DIRECTORY
HERE YOU MAY FIND RESULT FILES NAMED IN A WAY
LOGS FOR DECODING PROCESS MAY BE FOUND IN FOLDER SAME DIRECTORY
SUMMARY 
THIS IS JUST AN EXAMPLE
THE POINT OF THIS SHORT TUTORIAL IS TO SHOW YOU HOW TO CREATE ANYTHING IN KALDI AND TO GET A BETTER UNDERSTANDING OF HOW TO THINK WHILE USING THIS TOOLKIT
PERSONALLY I STARTED WITH LOOKING FOR TUTORIALS MADE BY THE KALDI AUTHORS DEVELOPERS
AFTER SUCCESSFUL KALDI INSTALLATION I LAUNCHED SOME EXAMPLE SCRIPTS YESNO
VOXFORGE
LIBRISPEECH 
THEY ARE RELATIVELY EASY AND HAVE FREE ACOUSTIC LANGUAGE DATA TO DOWNLOAD 
I USED THESE THREE AS A BASE FOR MY OWN SCRIPTS
MAKE SURE YOU FOLLOW HTTP KALDI
ASR
ORG 
OFFICIAL PROJECT WEBSITE
THERE ARE TWO VERY USEFUL SECTIONS FOR BEGINNERS INSIDE A
KALDI TUTORIAL 
ALMOST STEP BY STEP TUTORIAL ON HOW TO SET UP AN ASR SYSTEM
UP TO SOME POINT THIS CAN BE DONE WITHOUT RM DATASET
IT IS GOOD TO READ IT
DATA PREPARATION 
VERY DETAILED EXPLANATION OF HOW TO USE YOUR OWN DATA IN KALDI